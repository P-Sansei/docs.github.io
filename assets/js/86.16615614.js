(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{301:function(t,a,v){"use strict";v.r(a);var r=v(2),_=Object(r.a)({},function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"测试小知识点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试小知识点","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试小知识点")]),t._v(" "),v("h2",{attrs:{id:"什么是-tdd"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-tdd","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 TDD")]),t._v(" "),v("h3",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("p",[v("strong",[t._v("测试驱动开发")]),t._v("（Test-Driven Development，TDD）是通过测试定义所要开发的功能的接口，然后实现功能的开发过程，是"),v("code",[t._v("敏捷开发")]),t._v("中的一项核心实践和技术。")]),t._v(" "),v("h3",{attrs:{id:"测试驱动开发的基本过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试驱动开发的基本过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试驱动开发的基本过程")]),t._v(" "),v("ul",[v("li",[t._v("明确当前要完成的功能。可以记录成一个 "),v("code",[t._v("TODO")]),t._v(" 列表。")]),t._v(" "),v("li",[t._v("快速完成针对此功能的测试用例编写。")]),t._v(" "),v("li",[t._v("测试代码编译不通过。")]),t._v(" "),v("li",[t._v("编写对应的功能代码。")]),t._v(" "),v("li",[t._v("测试通过。")]),t._v(" "),v("li",[t._v("对代码进行重构，并保证测试通过。")]),t._v(" "),v("li",[t._v("循环完成所有功能的开发。")])]),t._v(" "),v("h3",{attrs:{id:"优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),v("ul",[v("li",[t._v("优点：保证代码质量，测试的覆盖率高")]),t._v(" "),v("li",[t._v("缺点：开发效率低（基于国内行情：先上线）")])]),t._v(" "),v("h2",{attrs:{id:"什么是-ddd"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是-ddd","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 DDD")]),t._v(" "),v("h3",{attrs:{id:"概念-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),v("p",[v("strong",[t._v("领域驱动设计")]),t._v("(Domain-Driven Design，DDD)")]),t._v(" "),v("h2",{attrs:{id:"常见的测试方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见的测试方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见的测试方式")]),t._v(" "),v("ul",[v("li",[t._v("单元测试：\n"),v("ul",[v("li",[t._v("白盒测试：又称结构测试、透明盒测试、逻辑驱动测试或基于代码的测试，简单来说是可以看到源码的，")]),t._v(" "),v("li",[t._v("黑盒测试：黑盒测试也称功能测试，它是通过测试来检测每个功能是否都能正常使用，简单来说看不到源码，功能测试")]),t._v(" "),v("li",[t._v("灰盒测试：介于白盒测试与黑盒测试之间的，灰盒测试关注输出对于输入的正确性，同时也关注内部表现，但这种关注不象白盒那样详细、完整，只是通过一些表征性的现象、事件、标志来判断内部的运行状态，有时候输出是正确的，但内部其实已经错误了，这种情况非常多，如果每次都通过白盒测试来操作，效率会很低，因此需要采取这样的一种灰盒的方法。")])])]),t._v(" "),v("li",[t._v("压力测试：并发数的问题，能承载多少并发")]),t._v(" "),v("li",[t._v("疲劳强度测试：长期稳定运行，72小时， 7天")]),t._v(" "),v("li",[t._v("冒烟测试：对主要流程测试，比如支付环节")]),t._v(" "),v("li",[t._v("集成测试：完整功能的测试，最终要的是测试 整体业务流程")]),t._v(" "),v("li",[t._v("回归测试：增加一个功能")]),t._v(" "),v("li",[t._v("自动化测试：编码，场景设计")])])])},[],!1,null,null,null);a.default=_.exports}}]);